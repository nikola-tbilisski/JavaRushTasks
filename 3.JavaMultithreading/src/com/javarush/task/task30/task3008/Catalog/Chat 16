Теперь все готово, чтобы дописать необходимые методы класса SocketThread.

1) Добавь protected метод clientHandshake() throws IOException, ClassNotFoundException.
Этот метод будет представлять клиента серверу.

Он должен:
а) В цикле получать сообщения, используя соединение connection.
б) Если тип полученного сообщения NAME_REQUEST (сервер запросил имя), запросить ввод имени пользователя с помощью метода getUserName(), создать новое сообщение с типом MessageType.USER_NAME и введенным именем, отправить сообщение серверу.
в) Если тип полученного сообщения MessageType.NAME_ACCEPTED (сервер принял имя), значит сервер принял имя клиента, нужно об этом сообщить главному потоку, он этого очень ждет.
Сделай это с помощью метода notifyConnectionStatusChanged(), передав в него true.
После этого выйди из метода.
г) Если пришло сообщение с каким-либо другим типом, кинь исключение IOException("Unexpected MessageType").

2) Добавь protected метод void clientMainLoop() throws IOException, ClassNotFoundException.

Этот метод будет реализовывать главный цикл обработки сообщений сервера. Внутри метода:
а) Получи сообщение от сервера, используя соединение connection.
б) Если это текстовое сообщение (тип MessageType.TEXT), обработай его с помощью метода processIncomingMessage().
в) Если это сообщение с типом MessageType.USER_ADDED, обработай его с помощью метода informAboutAddingNewUser().
г) Если это сообщение с типом MessageType.USER_REMOVED, обработай его с помощью метода informAboutDeletingNewUser().
д) Если клиент получил сообщение какого-либо другого типа, брось исключение IOException("Unexpected MessageType").
е) Размести код из предыдущих пунктов внутри бесконечного цикла.
Цикл будет завершен автоматически если произойдет ошибка (будет брошено исключение) или поток, в котором работает цикл, будет прерван.