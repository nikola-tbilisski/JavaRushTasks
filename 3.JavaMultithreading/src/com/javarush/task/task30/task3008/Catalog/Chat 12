Приступим к написанию клиента.

Клиент, в начале своей работы, должен запросить у пользователя адрес и порт сервера, подсоединиться к указанному адресу, получить запрос имени от сервера, спросить имя у пользователя, отправить имя пользователя серверу, дождаться принятия имени сервером.
После этого клиент может обмениваться текстовыми сообщениями с сервером.
Обмен сообщениями будет происходить в двух параллельно работающих потоках.
Один будет заниматься чтением из консоли и отправкой прочитанного серверу, а второй поток будет получать данные от сервера и выводить их в консоль.

Начнем реализацию клиента:
1) Создай пакет client. В дальнейшем все классы, отвечающие за реализацию клиентов, создавай в этом пакете.
2) Создай класс Client.
3) Создай внутренний класс SocketThread унаследованный от Thread в классе Client.
Он будет отвечать за поток, устанавливающий сокетное соединение и читающий сообщения сервера.
Класс должен иметь публичный модификатор доступа.
4) Создай поле Connection connection в классе Client.
Используй модификатор доступа, который позволит обращаться к этому полю из класса потомков, но запретит обращение из других классов вне пакета.
5) Добавь приватное поле-флаг boolean clientConnected в класс Client.
Проинициализируй его значением false.
В дальнейшем оно будет устанавливаться в true, если клиент подсоединен к серверу или в false в противном случае.
При объявлении этого поля используй ключевое слово, которое позволит гарантировать что каждый поток, использующий поле clientConnected, работает с актуальным, а не кэшированным его значением.