Нам осталось доделать метод main.

Сперва давай сравним параметры конструктора RandomOrderGeneratorTask.
Должно быть вот так:
public RandomOrderGeneratorTask(List<Tablet> tablets, int interval)

В методе main:
1. Удали создание хардкоженного планшета и вызова его метода createOrder().
2. Создай второго повара.
3. Зарегистрируй поваров используя класс StatisticManager.
4. Для обоих поваров и всех планшетов расставь зависимость Observer-Observable.
5. Создай список объектов-планшетов 5 штук, инициализируй его в цикле.
6. Создай и запусти трэд на основе объекта RandomOrderGeneratorTask.
7. Через секунду прерви его и посмотри на вывод в консоль.

Уупс, два повара готовят один и тот же заказ 8-О

Такой аутпут получился потому, что Observable информирует всех своих Observer-ов, т.е. планшет направляет свой заказ всем известным ему поварам.
Такое поведение нам не подходит, поэтому будем исправлять его в следующем задании.

P.S. Не забудь остановить тред!

Требования:
•	В методе main класса Restaurant должно быть создано 5 планшетов.
•	В методе main класса Restaurant должно быть создано 2 повара.
•	Повара должны быть зарегистрированы в множестве поваров в StatisticManager.
•	Должен быть создан и запущен тред на основе RandomOrderGeneratorTask.
•	Конструктор класса RandomOrderGeneratorTask должен соответствовать описанному в условии задачи.
•	Оба повара должны быть добавлены каждому планшету в качестве наблюдателей.
35

