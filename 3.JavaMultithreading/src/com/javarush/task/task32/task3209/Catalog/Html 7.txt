HTML Editor (7)
Добавь класс MenuHelper. Это будет вспомогательный класс для инициализации и настройки меню.

У меню будет следующая структура:
- Файл
- Новый
- Открыть
- Сохранить
- Сохранить как...
- Выход

- Редактировать
- Отменить
- Вернуть
- Вырезать
- Копировать
- Вставить

- Стиль
- Полужирный
- Подчеркнутый
- Курсив
- Подстрочный знак
- Надстрочный знак
- Зачеркнутый

- Выравнивание
- По левому краю
- По центру
- По правому краю

- Цвет
- Красный
- Оранжевый
- Желтый
- Зеленый
- Синий
- Голубой
- Пурпурный
- Черный

- Шрифт
- Шрифт
- SansSerif, Serif, Monospaced, Dialog, DialogInput,
- Размер шрифта
- 6, 8, 10, 12, 14, 16, 20, 24, 32, 36, 48, 72

- Помощь
- О программе

7.1. Реализуй в MenuHelper статический метод JMenuItem addMenuItem(JMenu parent, String text, ActionListener actionListener), где parent - меню в которое мы добавляем пункт, text - текст добавляемого пункта, actionListener - слушатель действий добавляемого пункта меню. Он должен:
7.1.1. Создавать новый пункт меню JMenuItem, используя text.
7.1.2. Устанавливать этому пункту слушателя действий с помощью метода addActionListener().
7.1.3. Добавлять в parent созданный пункт меню.
7.1.4. Возвращать созданный пункт меню.
7.2. Реализуй статический метод JMenuItem addMenuItem(JMenu parent, Action action). Этот метод аналогичен предыдущему, но в качестве параметра принимает действие action, которое необходимо выполнить при выборе пункта меню.

Подсказка: при создании JMenuItem передай в конструктор action. Разберись откуда возьмется имя пункта меню, если его не устанавливать дополнительно.

7.3. Реализуй статический метод JMenuItem addMenuItem(JMenu parent, String text, Action action), который добавляет в parent новый пункт меню с текстом text и действием action при выборе этого метода. При реализации используй вызов метода из предыдущего пункта.
7.4. Добавь в MenuHelper заглушки для следующих статических методов:
7.4.1. void initHelpMenu(View view, JMenuBar menuBar) - инициализация меню помощи.
7.4.2. void initFontMenu(View view, JMenuBar menuBar) - инициализация меню выбора шрифта.
7.4.3. void initColorMenu(View view, JMenuBar menuBar) - инициализация меню выбора цвета.
7.4.4. void initAlignMenu(View view, JMenuBar menuBar) - инициализация меню выравнивания.
7.4.5. void initStyleMenu(View view, JMenuBar menuBar) - инициализация меню выбора стиля текста.
7.4.6. void initEditMenu(View view, JMenuBar menuBar) - инициализация меню редактирования текста.
7.4.7. void initFileMenu(View view, JMenuBar menuBar) - инициализация меню Файл.


Requirements:
1. Класс MenuHelper должен быть создан в отдельном файле.
2. Класс MenuHelper должен реализовывать публичный статический метод JMenuItem addMenuItem(JMenu parent, String text, ActionListener actionListener).
3. Класс MenuHelper должен реализовывать публичный статический метод JMenuItem addMenuItem(JMenu parent, Action action).
4. Класс MenuHelper должен реализовывать публичный статический метод JMenuItem addMenuItem(JMenu parent, String text, Action action).
5. Класс MenuHelper должен содержать публичный статический метод void initHelpMenu(View view, JMenuBar menuBar).
6. Класс MenuHelper должен содержать публичный статический метод void initFontMenu(View view, JMenuBar menuBar).
7. Класс MenuHelper должен содержать публичный статический метод void initColorMenu(View view, JMenuBar menuBar).
8. Класс MenuHelper должен содержать публичный статический метод void initAlignMenu(View view, JMenuBar menuBar).
9. Класс MenuHelper должен содержать публичный статический метод void initStyleMenu(View view, JMenuBar menuBar).
10. Класс MenuHelper должен содержать публичный статический метод void initEditMenu(View view, JMenuBar menuBar).
11. Класс MenuHelper должен содержать публичный статический метод void initFileMenu(View view, JMenuBar menuBar).