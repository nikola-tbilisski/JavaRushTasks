Пришло время отрефакторить класс ZipFileManager.
В методе createZip есть код, который нам также понадобится в методах,
которые будут добавлять или удалять файл в архив, распаковывать его и т.д.
Эти методы мы будем реализовывать позже, но уже сейчас можем вынести общие части кода в отдельные методы.
Кроме того, метод createZip мог создавать архив только из одного файла,
а хотелось бы уметь архивировать всю папку целиком.
Создавать отдельный метод для этого не будем, т.к. в createZip(Path source)
можно передавать и директорию и обычный файл.

Задания на сегодня:
1. Реализуй приватный метод void addNewZipEntry(ZipOutputStream zipOutputStream, Path filePath,
Path fileName) throws Exception в классе ZipFileManager.

Он должен:
1.1. Создавать InputStream, для файла с именем fileName, расположенным в директории filePath
1.2. Создавать новый элемент архива ZipEntry, в качестве имени используй fileName, преобразовав его в String
1.3. Добавить в переданный zipOutputStream новый элемент архива ZipEntry (из п.1.2)
1.4. Копировать данные из InputStream (из п.1.1) в переданный zipOutputStream
1.5. Закрывать в zipOutputStream элемент архива ZipEntry (из п.1.2)
1.6. Закрывать InputStream, сделай это с помощью try-with-resources
2. Замени часть кода метода createZip вызовом нового метода addNewZipEntry.
Передай значение source.getParent() в параметр filePath, а source.getFileName() в filename.
3. Реализуй приватный метод void copyData(InputStream in, OutputStream out) throws Exception.
Он должен читать данные из in и записывать в out, пока не вычитает все.
4. Замени часть кода метода addNewZipEntry на вызов метода copyData
5. Вернемся к createZip:
5.1. В начале метода проверь, что существует директория (zipFile.getParent()),
в которой мы будем создавать zipFile, если ее нет, то создай ее.
5.2. Если source является обычным файлом (для проверки используй Files.isRegularFile),
то оставим просто вызов addNewZipEntry
5.3. Если source является директорией (для проверки используй Files.isDirectory), то:
5.3.1. Создай объект класса файловый менеджер FileManager, в конструктор передадим source
5.3.2. Получи список файлов у файлового менеджера, сохраним его в переменную fileNames
5.3.3. Для всех элементов fileNames, вызови метод addNewZipEntry(zipOutputStream, source, fileName)
5.4. Если source не является ни папкой, ни файлом, то кинь исключение PathIsNotFoundException.

Требования:
•	В классе ZipFileManager добавь приватный метод void addNewZipEntry(ZipOutputStream zipOutputStream,
    Path filePath, Path fileName) throws Exception.
•	Метод addNewZipEntry должен быть реализован следуя описанию в задании.
•	Замени часть кода метода createZip вызовом нового метода addNewZipEntry.
•	В классе ZipFileManager добавь приватный метод void copyData(InputStream in, OutputStream out)
    throws Exception.
•	Метод copyData должен читать данные из in и записывать в out, пока не вычитает все байты.
•	Замени часть кода метода addNewZipEntry вызовом нового метода copyData.
•	Метод createZip в классе ZipFileManager должен быть доработан следуя описанию в задании.
14

Input data
